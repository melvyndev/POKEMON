{"ast":null,"code":"import axios from 'axios';\nclass PokemonService {\n  static async getPokemons() {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=300&offset=0&language=fr');\n      const fetchedPokemons = await Promise.all(response.data.results.map(async pokemon => {\n        const detailsResponse = await axios.get(pokemon.url);\n        return PokemonService.mapPokemon(detailsResponse.data);\n      }));\n      return fetchedPokemons;\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n      throw new Error('Internal Server Error');\n    }\n  }\n  static async getPokemonById(id) {\n    try {\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\n      return PokemonService.mapPokemon(response.data);\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n      throw new Error('Internal Server Error');\n    }\n  }\n  static mapPokemon(data) {\n    return {\n      id: data.id,\n      name: data.name,\n      hp: data.stats[0].base_stat,\n      cp: data.stats[1].base_stat,\n      picture: data.sprites.front_default,\n      types: data.types.map(type => type.type.name),\n      created: new Date()\n    };\n  }\n}\nexport default PokemonService;","map":{"version":3,"names":["axios","PokemonService","getPokemons","response","get","fetchedPokemons","Promise","all","data","results","map","pokemon","detailsResponse","url","mapPokemon","error","console","Error","getPokemonById","id","name","hp","stats","base_stat","cp","picture","sprites","front_default","types","type","created","Date"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/models/pokemon-service.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\ninterface Pokemon {\r\n  id: number;\r\n  name: string;\r\n  hp: number;\r\n  cp: number;\r\n  picture: string;\r\n  types: string[];\r\n  created: Date;\r\n}\r\n\r\nclass PokemonService {\r\n  static async getPokemons(): Promise<Pokemon[]> {\r\n    try {\r\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=300&offset=0&language=fr');\r\n      const fetchedPokemons = await Promise.all(response.data.results.map(async (pokemon: any) => {\r\n        const detailsResponse = await axios.get(pokemon.url);\r\n        return PokemonService.mapPokemon(detailsResponse.data);\r\n      }));\r\n      return fetchedPokemons;\r\n    } catch (error) {\r\n      console.error('Error fetching Pokemon data:', error);\r\n      throw new Error('Internal Server Error');\r\n    }\r\n  }\r\n\r\n  static async getPokemonById(id: number): Promise<Pokemon> {\r\n    try {\r\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`);\r\n      return PokemonService.mapPokemon(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching Pokemon data:', error);\r\n      throw new Error('Internal Server Error');\r\n    }\r\n  }\r\n\r\n  private static mapPokemon(data: any): Pokemon {\r\n    return {\r\n      id: data.id,\r\n      name: data.name,\r\n      hp: data.stats[0].base_stat,\r\n      cp: data.stats[1].base_stat,\r\n      picture: data.sprites.front_default,\r\n      types: data.types.map((type: any) => type.type.name),\r\n      created: new Date(),\r\n    };\r\n  }\r\n}\r\n\r\nexport default PokemonService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAYzB,MAAMC,cAAc,CAAC;EACnB,aAAaC,WAAWA,CAAA,EAAuB;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kEAAkE,CAAC;MACpG,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,OAAY,IAAK;QAC1F,MAAMC,eAAe,GAAG,MAAMZ,KAAK,CAACI,GAAG,CAACO,OAAO,CAACE,GAAG,CAAC;QACpD,OAAOZ,cAAc,CAACa,UAAU,CAACF,eAAe,CAACJ,IAAI,CAAC;MACxD,CAAC,CAAC,CAAC;MACH,OAAOH,eAAe;IACxB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF;EAEA,aAAaC,cAAcA,CAACC,EAAU,EAAoB;IACxD,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,qCAAoCe,EAAG,EAAC,CAAC;MAC3E,OAAOlB,cAAc,CAACa,UAAU,CAACX,QAAQ,CAACK,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF;EAEA,OAAeH,UAAUA,CAACN,IAAS,EAAW;IAC5C,OAAO;MACLW,EAAE,EAAEX,IAAI,CAACW,EAAE;MACXC,IAAI,EAAEZ,IAAI,CAACY,IAAI;MACfC,EAAE,EAAEb,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS;MAC3BC,EAAE,EAAEhB,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS;MAC3BE,OAAO,EAAEjB,IAAI,CAACkB,OAAO,CAACC,aAAa;MACnCC,KAAK,EAAEpB,IAAI,CAACoB,KAAK,CAAClB,GAAG,CAAEmB,IAAS,IAAKA,IAAI,CAACA,IAAI,CAACT,IAAI,CAAC;MACpDU,OAAO,EAAE,IAAIC,IAAI,CAAC;IACpB,CAAC;EACH;AACF;AAEA,eAAe9B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}