{"ast":null,"code":"const formatType = type => {\n  let color;\n  switch (type) {\n    case 'fire':\n      color = 'red lighten-1';\n      break;\n    case 'Eau':\n      color = 'blue lighten-1';\n      break;\n    case 'grass':\n      color = 'green lighten-1';\n      break;\n    case 'Insecte':\n      color = 'brown lighten-1';\n      break;\n    case 'Normal':\n      color = 'grey lighten-3';\n      break;\n    case 'fly':\n      color = 'blue lighten-3';\n      break;\n    case 'poison':\n      color = 'deep-purple accent-1';\n      break;\n    case 'fary':\n      color = 'pink lighten-4';\n      break;\n    case 'psy':\n      color = 'deep-purple darken-2';\n      break;\n    case 'electrik':\n      color = 'lime accent-1';\n      break;\n    case 'fight':\n      color = 'deep-orange';\n      break;\n    default:\n      color = 'grey';\n      break;\n  }\n  return `chip ${color}`;\n};\nexport default formatType;","map":{"version":3,"names":["formatType","type","color"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/helpers/format-type.ts"],"sourcesContent":["const formatType = (type: string): string => {\r\n    let color: string;\r\n  \r\n    switch (type) {\r\n      case 'fire': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'grass': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'fly': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'fary': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'fight': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n  \r\n    return `chip ${color}`;\r\n  }\r\n  \r\n\r\nexport default formatType;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAY,IAAa;EACzC,IAAIC,KAAa;EAEjB,QAAQD,IAAI;IACV,KAAK,MAAM;MACTC,KAAK,GAAG,eAAe;MACvB;IACF,KAAK,KAAK;MACRA,KAAK,GAAG,gBAAgB;MACxB;IACF,KAAK,OAAO;MACVA,KAAK,GAAG,iBAAiB;MACzB;IACF,KAAK,SAAS;MACZA,KAAK,GAAG,iBAAiB;MACzB;IACF,KAAK,QAAQ;MACXA,KAAK,GAAG,gBAAgB;MACxB;IACF,KAAK,KAAK;MACRA,KAAK,GAAG,gBAAgB;MACxB;IACF,KAAK,QAAQ;MACXA,KAAK,GAAG,sBAAsB;MAC9B;IACF,KAAK,MAAM;MACTA,KAAK,GAAG,gBAAgB;MACxB;IACF,KAAK,KAAK;MACRA,KAAK,GAAG,sBAAsB;MAC9B;IACF,KAAK,UAAU;MACbA,KAAK,GAAG,eAAe;MACvB;IACF,KAAK,OAAO;MACVA,KAAK,GAAG,aAAa;MACrB;IACF;MACEA,KAAK,GAAG,MAAM;MACd;EACJ;EAEA,OAAQ,QAAOA,KAAM,EAAC;AACxB,CAAC;AAGH,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}