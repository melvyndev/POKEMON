{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst usePokemons = () => {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=300&offset=0&language=fr');\n        const fetchedPokemons = await Promise.all(response.data.results.map(async pokemon => {\n          const detailsResponse = await axios.get(pokemon.url);\n          return {\n            id: detailsResponse.data.id,\n            name: detailsResponse.data.name,\n            hp: detailsResponse.data.stats[0].base_stat,\n            cp: detailsResponse.data.stats[1].base_stat,\n            picture: detailsResponse.data.sprites.front_default,\n            types: detailsResponse.data.types.map(type => type.type.name),\n            created: new Date()\n          };\n        }));\n        setPokemons(fetchedPokemons);\n      } catch (error) {\n        console.error('Error fetching Pokemon data:', error);\n      }\n    };\n    fetchPokemons();\n  }, []);\n  return pokemons;\n};\n_s(usePokemons, \"HTV26hiVYObM9ZdttYFfm0Hoy8g=\");\nexport default usePokemons;","map":{"version":3,"names":["useState","useEffect","axios","usePokemons","_s","pokemons","setPokemons","fetchPokemons","response","get","fetchedPokemons","Promise","all","data","results","map","pokemon","detailsResponse","url","id","name","hp","stats","base_stat","cp","picture","sprites","front_default","types","type","created","Date","error","console"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/hooks/pokemon.hook.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst usePokemons = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPokemons = async () => {\r\n      try {\r\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=300&offset=0&language=fr');\r\n        const fetchedPokemons = await Promise.all(response.data.results.map(async (pokemon: any) => {\r\n          const detailsResponse = await axios.get(pokemon.url);\r\n          return {\r\n            id: detailsResponse.data.id,\r\n            name: detailsResponse.data.name,\r\n            hp: detailsResponse.data.stats[0].base_stat,\r\n            cp: detailsResponse.data.stats[1].base_stat,\r\n            picture: detailsResponse.data.sprites.front_default,\r\n            types: detailsResponse.data.types.map((type: any) => type.type.name),\r\n            created: new Date(),\r\n          };\r\n        }));\r\n        setPokemons(fetchedPokemons);\r\n      } catch (error) {\r\n        console.error('Error fetching Pokemon data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPokemons();\r\n  }, []);\r\n  return pokemons;\r\n};\r\n\r\nexport default usePokemons;\r\n"],"mappings":";AAAA,SAAgBA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAY,EAAE,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,kEAAkE,CAAC;QACpG,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,OAAY,IAAK;UAC1F,MAAMC,eAAe,GAAG,MAAMf,KAAK,CAACO,GAAG,CAACO,OAAO,CAACE,GAAG,CAAC;UACpD,OAAO;YACLC,EAAE,EAAEF,eAAe,CAACJ,IAAI,CAACM,EAAE;YAC3BC,IAAI,EAAEH,eAAe,CAACJ,IAAI,CAACO,IAAI;YAC/BC,EAAE,EAAEJ,eAAe,CAACJ,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS;YAC3CC,EAAE,EAAEP,eAAe,CAACJ,IAAI,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS;YAC3CE,OAAO,EAAER,eAAe,CAACJ,IAAI,CAACa,OAAO,CAACC,aAAa;YACnDC,KAAK,EAAEX,eAAe,CAACJ,IAAI,CAACe,KAAK,CAACb,GAAG,CAAEc,IAAS,IAAKA,IAAI,CAACA,IAAI,CAACT,IAAI,CAAC;YACpEU,OAAO,EAAE,IAAIC,IAAI,CAAC;UACpB,CAAC;QACH,CAAC,CAAC,CAAC;QACHzB,WAAW,CAACI,eAAe,CAAC;MAC9B,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDzB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,QAAQ;AACjB,CAAC;AAACD,EAAA,CA5BID,WAAW;AA8BjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}