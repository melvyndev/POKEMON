{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fariziala\\\\Desktop\\\\SITE\\\\pokemon\\\\src\\\\components\\\\pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\nimport formatType from '../helpers/format-type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = ({\n  pokemon,\n  borderColor = '#009688'\n}) => {\n  _s();\n  const [color, setColor] = useState();\n  const showBorder = () => {\n    setColor(borderColor);\n    console.log('in');\n  };\n  const hideBorder = () => {\n    setColor('#009688');\n    console.log('leave');\n  };\n  const formaDate = date => {\n    return `${date.getDay()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-md-6 col-lg-4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideBorder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formaDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: formatType(type),\n              children: [type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 70\n              }, this)]\n            }, type, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","formatType","jsxDEV","_jsxDEV","PokemonCard","pokemon","borderColor","_s","color","setColor","showBorder","console","log","hideBorder","formaDate","date","getDay","getMonth","getFullYear","className","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","type","_c","$RefreshReg$"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport './pokemon-card.css';\r\nimport formatType  from '../helpers/format-type';\r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  borderColor?:string \r\n};\r\n  \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\r\n \r\n  const [color, setColor] = useState<string>();\r\n \r\n  const showBorder = () => {\r\n   setColor(borderColor);\r\n   console.log('in');\r\n  }\r\n\r\n\r\n  const hideBorder = () => {\r\n    setColor('#009688');\r\n    console.log('leave');\r\n  }\r\n  \r\n  const formaDate = (date:Date) =>{\r\n    return `${date.getDay()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n  }\r\n\r\n \r\n  return (\r\n      <div className=\"col-12 col-md-6 col-lg-4\" onMouseEnter={showBorder} onMouseLeave={hideBorder} >\r\n        <div className=\"card horizontal\" style={{borderColor:color}}>\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formaDate(pokemon.created)}</small></p>\r\n            <p>{pokemon.types.map(type => (\r\n                <span className={formatType(type)} key={type}>{type} <br /></span>\r\n            ))}</p>\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n   \r\n  );\r\n}\r\n  \r\nexport default PokemonCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}