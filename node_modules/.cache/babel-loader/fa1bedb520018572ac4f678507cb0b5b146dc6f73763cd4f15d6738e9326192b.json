{"ast":null,"code":"import express from 'express';\nimport PokemonService from './PokemonService';\nconst app = express();\nconst port = 3000;\nconst pokemonService = new PokemonService();\napp.use(express.json());\napp.get('/api/pokemons', async (req, res) => {\n  try {\n    const pokemons = await pokemonService.getPokemons();\n    res.json(pokemons);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\napp.get('/api/pokemon/:id', async (req, res) => {\n  const {\n    id\n  } = req.params;\n  try {\n    const pokemon = await pokemonService.getPokemonById(Number(id));\n    res.json(pokemon);\n  } catch (error) {\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\napp.listen(port, () => {\n  console.log(`Server is running at http://localhost:${port}`);\n});","map":{"version":3,"names":["express","PokemonService","app","port","pokemonService","use","json","get","req","res","pokemons","getPokemons","error","status","id","params","pokemon","getPokemonById","Number","listen","console","log"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/models/pokemon-service.ts"],"sourcesContent":["import express from 'express';\r\nimport PokemonService from './PokemonService';\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\nconst pokemonService = new PokemonService();\r\n\r\napp.use(express.json());\r\n\r\napp.get('/api/pokemons', async (req, res) => {\r\n  try {\r\n    const pokemons = await pokemonService.getPokemons();\r\n    res.json(pokemons);\r\n  } catch (error) {\r\n    res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n});\r\n\r\napp.get('/api/pokemon/:id', async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    const pokemon = await pokemonService.getPokemonById(Number(id));\r\n    res.json(pokemon);\r\n  } catch (error) {\r\n    res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server is running at http://localhost:${port}`);\r\n});\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC;AACrB,MAAMG,IAAI,GAAG,IAAI;AAEjB,MAAMC,cAAc,GAAG,IAAIH,cAAc,CAAC,CAAC;AAE3CC,GAAG,CAACG,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AAEvBJ,GAAG,CAACK,GAAG,CAAC,eAAe,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,cAAc,CAACO,WAAW,CAAC,CAAC;IACnDF,GAAG,CAACH,IAAI,CAACI,QAAQ,CAAC;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAAEM,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEFV,GAAG,CAACK,GAAG,CAAC,kBAAkB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,MAAM;IAAEK;EAAG,CAAC,GAAGN,GAAG,CAACO,MAAM;EAEzB,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMZ,cAAc,CAACa,cAAc,CAACC,MAAM,CAACJ,EAAE,CAAC,CAAC;IAC/DL,GAAG,CAACH,IAAI,CAACU,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdH,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACP,IAAI,CAAC;MAAEM,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAEFV,GAAG,CAACiB,MAAM,CAAChB,IAAI,EAAE,MAAM;EACrBiB,OAAO,CAACC,GAAG,CAAE,yCAAwClB,IAAK,EAAC,CAAC;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}