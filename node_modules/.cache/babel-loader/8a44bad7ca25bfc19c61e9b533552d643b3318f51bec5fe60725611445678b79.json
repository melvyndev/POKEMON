{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fariziala\\\\Desktop\\\\SITE\\\\pokemon\\\\src\\\\components\\\\pokemon-form.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonForm = ({\n  pokemon\n}) => {\n  _s();\n  const [form, setForm] = useState({\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    setForm(prevForm => ({\n      ...prevForm,\n      [fieldName]: {\n        value: fieldValue,\n        isValid: true\n      }\n    }));\n  };\n  const handleCheckboxChange = type => {\n    setForm(prevForm => ({\n      ...prevForm,\n      types: {\n        ...prevForm.types,\n        value: prevForm.types.value.includes(type) ? prevForm.types.value.filter(t => t !== type) : [...prevForm.types.value, type]\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add your form submission logic here\n    // You can access the form data using the `form` state\n    console.log('Form submitted:', form);\n    // Reset form after submission if needed\n    // setForm({ name: { value: '', isValid: true }, hp: { value: 0, isValid: true }, cp: { value: 0, isValid: true }, types: { value: [], isValid: true } });\n  };\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-sm-10 offset-sm-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-action center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Valider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonForm, \"Yn26vZ2YMO7Zhi0GQrrW+FDbgiI=\");\n_c = PokemonForm;\nexport default PokemonForm;\nvar _c;\n$RefreshReg$(_c, \"PokemonForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PokemonForm","pokemon","_s","form","setForm","name","value","isValid","hp","cp","types","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","prevForm","handleCheckboxChange","filter","t","handleSubmit","preventDefault","console","log","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/src/components/pokemon-form.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon\r\n};\r\n\r\ntype Field = {\r\n  value: any,\r\n  error?: string,\r\n  isValid: boolean,\r\n};\r\n\r\ntype Form = {\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon }) => {\r\n  const [form, setForm] = useState<Form>({\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true }\r\n  });\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n  \r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      [fieldName]: {\r\n        value: fieldValue,\r\n        isValid: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (type: string) => {\r\n    setForm((prevForm) => ({\r\n      ...prevForm,\r\n      types: {\r\n        ...prevForm.types,\r\n        value: prevForm.types.value.includes(type)\r\n          ? prevForm.types.value.filter((t: string) => t !== type)\r\n          : [...prevForm.types.value, type]\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    // Add your form submission logic here\r\n    // You can access the form data using the `form` state\r\n    console.log('Form submitted:', form);\r\n    // Reset form after submission if needed\r\n    // setForm({ name: { value: '', isValid: true }, hp: { value: 0, isValid: true }, cp: { value: 0, isValid: true }, types: { value: [], isValid: true } });\r\n  };\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-sm-10 offset-sm-1\">\r\n          <div className=\"card hoverable px-4\">\r\n            {/* ... (rest of the component) ... */}\r\n            <div className=\"card-action center\">\r\n              {/* Submit button */}\r\n              <button type=\"submit\" className=\"btn btn-primary\">Valider</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}