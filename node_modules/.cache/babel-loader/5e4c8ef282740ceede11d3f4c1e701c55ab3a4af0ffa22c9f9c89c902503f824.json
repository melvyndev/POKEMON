{"ast":null,"code":"const peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const lst = 1 << n - 1;\n  let pv = -1;\n  let mv = 0;\n  let sc = n;\n  let i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] |= 1 << i;\n  }\n  for (i = 0; i < m; i++) {\n    let eq = peq[b.charCodeAt(i)];\n    const xv = eq | mv;\n    eq |= (eq & pv) + pv ^ pv;\n    mv |= ~(eq | pv);\n    pv &= eq;\n    if (mv & lst) {\n      sc++;\n    }\n    if (pv & lst) {\n      sc--;\n    }\n    mv = mv << 1 | 1;\n    pv = pv << 1 | ~(xv | mv);\n    mv &= xv;\n  }\n  i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] = 0;\n  }\n  return sc;\n};\nconst myers_x = (b, a) => {\n  const n = a.length;\n  const m = b.length;\n  const mhc = [];\n  const phc = [];\n  const hsize = Math.ceil(n / 32);\n  const vsize = Math.ceil(m / 32);\n  for (let i = 0; i < hsize; i++) {\n    phc[i] = -1;\n    mhc[i] = 0;\n  }\n  let j = 0;\n  for (; j < vsize - 1; j++) {\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m) + start;\n    for (let k = start; k < vlen; k++) {\n      peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    for (let i = 0; i < n; i++) {\n      const eq = peq[a.charCodeAt(i)];\n      const pb = phc[i / 32 | 0] >>> i & 1;\n      const mb = mhc[i / 32 | 0] >>> i & 1;\n      const xv = eq | mv;\n      const xh = ((eq | mb) & pv) + pv ^ pv | eq | mb;\n      let ph = mv | ~(xh | pv);\n      let mh = pv & xh;\n      if (ph >>> 31 ^ pb) {\n        phc[i / 32 | 0] ^= 1 << i;\n      }\n      if (mh >>> 31 ^ mb) {\n        mhc[i / 32 | 0] ^= 1 << i;\n      }\n      ph = ph << 1 | pb;\n      mh = mh << 1 | mb;\n      pv = mh | ~(xv | ph);\n      mv = ph & xv;\n    }\n    for (let k = start; k < vlen; k++) {\n      peq[b.charCodeAt(k)] = 0;\n    }\n  }\n  let mv = 0;\n  let pv = -1;\n  const start = j * 32;\n  const vlen = Math.min(32, m - start) + start;\n  for (let k = start; k < vlen; k++) {\n    peq[b.charCodeAt(k)] |= 1 << k;\n  }\n  let score = m;\n  for (let i = 0; i < n; i++) {\n    const eq = peq[a.charCodeAt(i)];\n    const pb = phc[i / 32 | 0] >>> i & 1;\n    const mb = mhc[i / 32 | 0] >>> i & 1;\n    const xv = eq | mv;\n    const xh = ((eq | mb) & pv) + pv ^ pv | eq | mb;\n    let ph = mv | ~(xh | pv);\n    let mh = pv & xh;\n    score += ph >>> m - 1 & 1;\n    score -= mh >>> m - 1 & 1;\n    if (ph >>> 31 ^ pb) {\n      phc[i / 32 | 0] ^= 1 << i;\n    }\n    if (mh >>> 31 ^ mb) {\n      mhc[i / 32 | 0] ^= 1 << i;\n    }\n    ph = ph << 1 | pb;\n    mh = mh << 1 | mb;\n    pv = mh | ~(xv | ph);\n    mv = ph & xv;\n  }\n  for (let k = start; k < vlen; k++) {\n    peq[b.charCodeAt(k)] = 0;\n  }\n  return score;\n};\nconst distance = (a, b) => {\n  if (a.length < b.length) {\n    const tmp = b;\n    b = a;\n    a = tmp;\n  }\n  if (b.length === 0) {\n    return a.length;\n  }\n  if (a.length <= 32) {\n    return myers_32(a, b);\n  }\n  return myers_x(a, b);\n};\nconst closest = (str, arr) => {\n  let min_distance = Infinity;\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    const dist = distance(str, arr[i]);\n    if (dist < min_distance) {\n      min_distance = dist;\n      min_index = i;\n    }\n  }\n  return arr[min_index];\n};\nexport { closest, distance };","map":{"version":3,"names":["peq","Uint32Array","myers_32","a","b","n","length","m","lst","pv","mv","sc","i","charCodeAt","eq","xv","myers_x","mhc","phc","hsize","Math","ceil","vsize","j","start","vlen","min","k","pb","mb","xh","ph","mh","score","distance","tmp","closest","str","arr","min_distance","Infinity","min_index","dist"],"sources":["C:/Users/Fariziala/Desktop/SITE/pokemon/node_modules/fastest-levenshtein/esm/mod.js"],"sourcesContent":["const peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n    const n = a.length;\n    const m = b.length;\n    const lst = 1 << (n - 1);\n    let pv = -1;\n    let mv = 0;\n    let sc = n;\n    let i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] |= 1 << i;\n    }\n    for (i = 0; i < m; i++) {\n        let eq = peq[b.charCodeAt(i)];\n        const xv = eq | mv;\n        eq |= ((eq & pv) + pv) ^ pv;\n        mv |= ~(eq | pv);\n        pv &= eq;\n        if (mv & lst) {\n            sc++;\n        }\n        if (pv & lst) {\n            sc--;\n        }\n        mv = (mv << 1) | 1;\n        pv = (pv << 1) | ~(xv | mv);\n        mv &= xv;\n    }\n    i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] = 0;\n    }\n    return sc;\n};\nconst myers_x = (b, a) => {\n    const n = a.length;\n    const m = b.length;\n    const mhc = [];\n    const phc = [];\n    const hsize = Math.ceil(n / 32);\n    const vsize = Math.ceil(m / 32);\n    for (let i = 0; i < hsize; i++) {\n        phc[i] = -1;\n        mhc[i] = 0;\n    }\n    let j = 0;\n    for (; j < vsize - 1; j++) {\n        let mv = 0;\n        let pv = -1;\n        const start = j * 32;\n        const vlen = Math.min(32, m) + start;\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] |= 1 << k;\n        }\n        for (let i = 0; i < n; i++) {\n            const eq = peq[a.charCodeAt(i)];\n            const pb = (phc[(i / 32) | 0] >>> i) & 1;\n            const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n            const xv = eq | mv;\n            const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n            let ph = mv | ~(xh | pv);\n            let mh = pv & xh;\n            if ((ph >>> 31) ^ pb) {\n                phc[(i / 32) | 0] ^= 1 << i;\n            }\n            if ((mh >>> 31) ^ mb) {\n                mhc[(i / 32) | 0] ^= 1 << i;\n            }\n            ph = (ph << 1) | pb;\n            mh = (mh << 1) | mb;\n            pv = mh | ~(xv | ph);\n            mv = ph & xv;\n        }\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] = 0;\n        }\n    }\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m - start) + start;\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    let score = m;\n    for (let i = 0; i < n; i++) {\n        const eq = peq[a.charCodeAt(i)];\n        const pb = (phc[(i / 32) | 0] >>> i) & 1;\n        const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n        const xv = eq | mv;\n        const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n        let ph = mv | ~(xh | pv);\n        let mh = pv & xh;\n        score += (ph >>> (m - 1)) & 1;\n        score -= (mh >>> (m - 1)) & 1;\n        if ((ph >>> 31) ^ pb) {\n            phc[(i / 32) | 0] ^= 1 << i;\n        }\n        if ((mh >>> 31) ^ mb) {\n            mhc[(i / 32) | 0] ^= 1 << i;\n        }\n        ph = (ph << 1) | pb;\n        mh = (mh << 1) | mb;\n        pv = mh | ~(xv | ph);\n        mv = ph & xv;\n    }\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] = 0;\n    }\n    return score;\n};\nconst distance = (a, b) => {\n    if (a.length < b.length) {\n        const tmp = b;\n        b = a;\n        a = tmp;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    if (a.length <= 32) {\n        return myers_32(a, b);\n    }\n    return myers_x(a, b);\n};\nconst closest = (str, arr) => {\n    let min_distance = Infinity;\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        const dist = distance(str, arr[i]);\n        if (dist < min_distance) {\n            min_distance = dist;\n            min_index = i;\n        }\n    }\n    return arr[min_index];\n};\nexport { closest, distance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}